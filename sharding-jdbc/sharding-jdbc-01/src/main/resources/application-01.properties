# shardingsphere \u5206\u7247\u7B56\u7565
# \u6570\u636E\u6E90\u540D\u79F0\uFF0C\u591A\u6570\u636E\u6E90\u4EE5\u9017\u53F7\u5206\u9694
spring.shardingsphere.datasource.names= ds1

# \u4E00\u4E2A\u5B9E\u4F53\u7C7B\u5BF9\u5E94\u4E24\u5F20\u8868\uFF0C\u8986\u76D6
spring.main.allow-bean-definition-overriding=true

# \u914D\u7F6E\u6570\u636E\u6E90\u5177\u4F53\u5185\u5BB9\uFF0C\u5305\u62EC\u8FDE\u63A5\u6C60\uFF0C\u9A71\u52A8\uFF0C\u5730\u5740\uFF0C\u7528\u6237\u540D\u548C\u5BC6\u7801
spring.shardingsphere.datasource.ds1.type=com.alibaba.druid.pool.DruidDataSource
spring.shardingsphere.datasource.ds1.driver-class-name=com.mysql.cj.jdbc.Driver
spring.shardingsphere.datasource.ds1.url=jdbc:mysql://localhost:3306/course_db?serverTimezone=GMT%2B8
spring.shardingsphere.datasource.ds1.username=root
spring.shardingsphere.datasource.ds1.password=root

# \u6307\u5B9A course \u8868\u5206\u5E03\u60C5\u51B5\uFF0C\u914D\u7F6E\u8868\u5728\u54EA\u4E2A\u6570\u636E\u5E93\u91CC\uFF0C\u8868\u540D\u79F0\u90FD\u662F\u4EC0\u4E48 ds1.course_1\u3001ds1.course_2
spring.shardingsphere.sharding.tables.course.actual-data-nodes=ds1.course_$->{1..2}

# \u6307\u5B9A course \u8868\u4E2D\u4E3B\u952E cid \u751F\u6210\u7B56\u7565 SNOWFLAK
spring.shardingsphere.sharding.tables.course.key-generator.column=cid
spring.shardingsphere.sharding.tables.course.key-generator.type=SNOWFLAKE

# \u6307\u5B9A\u5206\u7247\u7B56\u7565\uFF0C\u7EA6\u5B9A cid \u503C\u4E3A\u5076\u6570\u6DFB\u52A0\u5230 course_1 \u8868\uFF0C\u5982\u679C cid \u503C\u4E3A\u5947\u6570\u6DFB\u52A0\u5230 course_2
spring.shardingsphere.sharding.tables.course.table-strategy.inline.sharding-column=cid
spring.shardingsphere.sharding.tables.course.table-strategy.inline.algorithm-expression=course_$->{cid % 2 + 1}

# \u6253\u5F00 sql \u8F93\u51FA\u65E5\u5FD7
spring.shardingsphere.props.sql.show=true


